library(jsonlite)
library(plyr)

# Variables
outputFile = "CF-rawdata.csv"
baseurl <- "https://games.crossfit.com/competitions/api/v1/competitions/open/2018/leaderboards?division=1&region=0&scaled=0&sort=0&occupation=0&page="

### Download the leaderboard

# Get the count of pages
mydata <- fromJSON(paste0(baseurl, 1), flatten=TRUE)
nbOfPages = mydata$pagination$totalPages

pages <- list()
for(i in 1:2){
  message("Retrieving page ", i, "/", nbOfPages, "\r", appendLF = FALSE)
  pageData <- readLines(paste0(baseurl, i))
  
  # Handle issues with unescaped backslashes
  pageData2 <- gsub('([^,:\\[:space:]])\"([^:,])', '\\1\\2', pageData)
  
  mydata <- fromJSON(pageData2, flatten=TRUE)
  pages[[i+1]] <- mydata$leaderboardRows
}
message("")

leaderboard <- rbind_pages(pages)

### Flatten the scores and append it (create new columns) to the dataframe
message("Flattening scores... ")

oldScores = leaderboard$scores
newScores <- data.frame()

lengthOldScores = length(oldScores)
for(i in 1:lengthOldScores) {
  message("Score: ", i, "/", lengthOldScores, "\r", appendLF = FALSE)
  rOldScores <- oldScores[i]
  rNewScores <- unlist(rOldScores, recursive = TRUE)
  names(rNewScores) <- gsub("(\\d)","\\.\\1",names(rNewScores))
  newScores <- rbind.fill(newScores, as.data.frame(t(rNewScores)))
}
message("")
newLeaderboard <- cbind(leaderboard, newScores)

newLeaderboard$scores <- as.character(newLeaderboard$scores)

### store it
message("Store the data in ", outputFile, " ...")
write.csv(newLeaderboard, file = outputFile)
leaderboard3 <- read.csv(file = outputFile)

counts <- sort(table(leaderboard3$entrant.regionName))
counts
par(las = 1, mar = c(3, 8, 3, 3))
bp <- barplot(counts, horiz=TRUE)
text(x = counts, y = bp, label = counts, pos = 2, cex = 0)

